// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PradoSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFAudio
import AdSupport
import AppTrackingTransparency
import CoreTelephony
import Foundation
import JavaScriptCore
@_exported import PradoSDK
import StoreKit.SKStoreProductViewController
import StoreKit
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
@objc public enum BannerPosition : Swift.Int {
  case top_center, bottom_center, top_left, top_right, bottom_left, bottom_right, none
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc final public class ToastMessage : ObjectiveC.NSObject {
  @objc public static func show(message: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(Prado) public class Prado : ObjectiveC.NSObject {
  @objc public static let instance: PradoSDK.Prado
  @objc public func initialize(publisherID: Swift.String, securityToken: Swift.String, delegate: PradoSDK.PradoInitDelegate)
  @objc public static func suppressSKANWarnings()
  @objc public static func getSdkVersion() -> Swift.String
  @objc public func isSDKInitialized() -> Swift.Bool
  @objc public static func setExtensionType(_ type: Swift.String, version: Swift.String)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class StringUtils {
  public static func convertJSONStringToDictionary(json: Swift.String?) -> [Swift.String : Swift.AnyObject]?
  @objc deinit
}
@objc public protocol PradoInitDelegate : PradoSDK.SDKInitDelegate {
}
@objc public protocol PradoRewardedDelegate {
  @objc func onRewardedAdLoaded(pradoRewardedAd: PradoSDK.PradoRewardedAd)
  @objc func onRewardedAdFailedToLoad(pradoError: PradoSDK.PradoError)
  @objc func onRewardedAdShown(pradoRewardedAd: PradoSDK.PradoRewardedAd)
  @objc func onRewardedAdFailedToShow(pradoRewardedAd: PradoSDK.PradoRewardedAd, pradoError: PradoSDK.PradoError)
  @objc func onRewardReceived(pradoRewardedAd: PradoSDK.PradoRewardedAd)
  @objc func onRewardedImpression(pradoRewardedAd: PradoSDK.PradoRewardedAd)
  @objc func onRewardedAdClosed(pradoRewardedAd: PradoSDK.PradoRewardedAd)
}
@objc public protocol PradoInterstitialDelegate {
  @objc func onInterstitialAdLoaded(pradoInterstitialAd: PradoSDK.PradoInterstitialAd)
  @objc func onInterstitialAdFailedToLoad(pradoError: PradoSDK.PradoError)
  @objc func onInterstitialAdShown(pradoInterstitialAd: PradoSDK.PradoInterstitialAd)
  @objc func onInterstitialAdFailedToShow(pradoInterstitialAd: PradoSDK.PradoInterstitialAd, pradoError: PradoSDK.PradoError)
  @objc func onInterstitialImpression(pradoInterstitialAd: PradoSDK.PradoInterstitialAd)
  @objc func onInterstitialAdClosed(pradoInterstitialAd: PradoSDK.PradoInterstitialAd)
}
@objc public protocol PradoBannerDelegate {
  @objc func onBannerAdLoaded(pradoBannerView: PradoSDK.PradoBannerView)
  @objc func onBannerAdFailedToLoad(pradoBannerView: PradoSDK.PradoBannerView, error: PradoSDK.PradoError)
  @objc func onBannerAdShown(pradoBannerView: PradoSDK.PradoBannerView)
  @objc func onBannerAdFailedToShow(pradoBannerView: PradoSDK.PradoBannerView, error: PradoSDK.PradoError)
  @objc func onBannerAdImpression(pradoBannerView: PradoSDK.PradoBannerView)
  @objc func onBannerAdClosed(pradoBannerView: PradoSDK.PradoBannerView)
}
@_inheritsConvenienceInitializers @objc(TestUtils) public class TestUtils : ObjectiveC.NSObject {
  public enum Environment {
    public static func allCases(sdk: PradoSDK.SDKType) -> [PradoSDK.TestUtils.Environment]
    case production(sdk: PradoSDK.SDKType)
    case qa(sdk: PradoSDK.SDKType)
    case ext_qa(sdk: PradoSDK.SDKType)
    case dev(sdk: PradoSDK.SDKType)
    public var info: (label: Swift.String, envUrl: Swift.String, waterfallUrl: Swift.String, testWaterfallUrl: Swift.String) {
      get
    }
  }
  public static func getSDKLabels() -> [Swift.String]
  public static func getEnvLabels(sdk: PradoSDK.SDKType) -> [Swift.String]
  public static func getCurrentSDKType() -> PradoSDK.SDKType
  public static func setCurrentSDKType(sdk: PradoSDK.SDKType)
  public static func isKidoz() -> Swift.Bool
  @objc public static func getEnvApiUrl() -> Swift.String?
  public static func setEnvApiUrl(apiUrl: Swift.String)
  @objc public static func getOverrideWaterfallUrl() -> Swift.String?
  public static func setOverrideWaterfallUrl(waterfallUrl: Swift.String?)
  public static func getTestWaterfallUrl() -> Swift.String?
  public static func setTestWaterfallUrl(waterfallUrl: Swift.String?)
  @objc public static func setEnvironment(sdkTypeStr: Swift.String, environmentStr: Swift.String)
  @objc public static func getBundleVersion() -> Swift.String
  public static func setEnvironment(environment: PradoSDK.TestUtils.Environment)
  @objc public static func setCampaignIds(campaignIds: Swift.String?)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol SDKInitDelegate {
  @objc func onInitSuccess()
  @objc func onInitError(_ error: Swift.String)
}
@_hasMissingDesignatedInitializers @objc(PradoError) public class PradoError : ObjectiveC.NSObject, Swift.Error {
  @objc public var errorCode: Swift.Int
  @objc public var message: Swift.String
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
public enum SDKType : Swift.String, Swift.CaseIterable {
  case kidoz
  case prado
  public var info: (label: Swift.String, envUrl: Swift.String, analyticsUrl: Swift.String) {
    get
  }
  public init?(rawValue: Swift.String)
  public typealias AllCases = [PradoSDK.SDKType]
  public typealias RawValue = Swift.String
  public static var allCases: [PradoSDK.SDKType] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(PradoRewardedAd) public class PradoRewardedAd : ObjectiveC.NSObject {
  @objc public static func load(delegate: PradoSDK.PradoRewardedDelegate)
  @objc public func show(viewController: UIKit.UIViewController)
  @objc public func isLoaded() -> Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(PradoBannerView) @_Concurrency.MainActor(unsafe) public class PradoBannerView : PradoSDK.KPBannerView {
  @objc @_Concurrency.MainActor(unsafe) public func setDelegate(delegate: PradoSDK.PradoBannerDelegate)
  @objc @_Concurrency.MainActor(unsafe) public var delegate: PradoSDK.PradoBannerDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class KPBannerView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) @objc dynamic public init()
  @objc @_Concurrency.MainActor(unsafe) public func setAutoShow(to autoShow: Swift.Bool)
  @objc @_Concurrency.MainActor(unsafe) public func load()
  @objc @_Concurrency.MainActor(unsafe) public func show()
  @objc @_Concurrency.MainActor(unsafe) public func setBannerPosition(_ bannerPosition: PradoSDK.BannerPosition)
  @objc @_Concurrency.MainActor(unsafe) public func close()
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc(PradoInterstitialAd) public class PradoInterstitialAd : ObjectiveC.NSObject {
  @objc public static func load(delegate: PradoSDK.PradoInterstitialDelegate)
  @objc public func show(viewController: UIKit.UIViewController)
  @objc public func isLoaded() -> Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(PlistUtil) public class PlistUtil : ObjectiveC.NSObject {
  @objc public static func checkKidozSKADNetworkIdExist(networkId: Swift.String) -> Swift.Bool
  @objc public static func getSKADNetworkIds() -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc final public class UIUtils : ObjectiveC.NSObject {
  @objc public static func topViewController() -> UIKit.UIViewController
  public static func visibleController() -> UIKit.UIViewController?
  @objc override dynamic public init()
  @objc deinit
}
extension PradoSDK.BannerPosition : Swift.Equatable {}
extension PradoSDK.BannerPosition : Swift.Hashable {}
extension PradoSDK.BannerPosition : Swift.RawRepresentable {}
extension PradoSDK.SDKType : Swift.Equatable {}
extension PradoSDK.SDKType : Swift.Hashable {}
extension PradoSDK.SDKType : Swift.RawRepresentable {}
